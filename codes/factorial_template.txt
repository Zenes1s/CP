int fact[N], ifact[N];
int power(int a,int b) 
{
    if(b==0)
    return 1;
    int res=power(a,b/2);
    if(b&1)
    res = ((res%mod*res%mod)%mod*a)%mod;
    else
    res=(res%mod*res%mod)%mod;
    return res%mod;
}
void pre() 
{
	fact[0]=1;
	f(i,1,N)
	fact[i]=((fact[i-1]%mod)*i)%mod;
	//inverse
	ifact[N]=power(fact[N],mod-2)%mod;;
	fr(i,1,N)
	ifact[i-1]=((ifact[i])*i)%mod;
}
 
int ncr(int n,int r) 
{
	if(r>n)
	return 0;
	int ans=fact[n];
	ans=((ans%mod)*(ifact[n-r])%mod)%mod;
	ans=((ans%mod)*(ifact[r]%mod))%mod;
	return ans;
}
 
int npr(int n, int r) 
{
	if(r>n)
	return 0;
	int ans=fact[n];
	ans=((ans%mod)*(ifact[n-r])%mod)%mod;
	return ans;
}