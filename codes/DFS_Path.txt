#include<bits/stdc++.h>
using namespace std;
#define int long long int
vector<int>* getPathHelper(int **edges,int n,int sv,int ev,bool *visited)
{
    if(sv==ev)
    {
        vector<int>* output=new vector<int>();
        output->push_back(ev);
        return output;
    } 
    visited[sv]=true;
    for(int i=0;i<n;i++)
    {
        if(edges[sv][i]==1 && !visited[i])
        {
            vector<int>* smallOutput=getPathHelper(edges,n,i,ev,visited);
            if(smallOutput!=NULL)
            {
                smallOutput->push_back(sv);
                return smallOutput;
            }
        }
    }
    return NULL;
}
vector<int>* getPath(int **edges,int n,int sv,int ev)
{
    bool* visited=new bool[n];
    for(int i=0;i<n;i++)
    visited[i]=false;
    vector<int>* output=getPathHelper(edges,n,sv,ev,visited);
    return output;
}
int32_t main()
{
     int n,e;
    cin>>n>>e;
    int **edges=new int *[n];
    for(int i=0;i<n;i++)
    {
        edges[i]=new int[n];
        for(int j=0;j<n;j++)
        edges[i][j]=0;
    }
    while(e--)
    {
        int x,y;
        cin>>x>>y;
        edges[x][y]=1;
        edges[y][x]=1;
    }
    int v1,v2;
    cin>>v1>>v2;
    vector<int>* output=getPath(edges,n,v1,v2);
    if(output!=NULL)
    {
        for(int i=0;i<output->size();i++)
        cout<<output->at(i)<<" ";
    }
    else
    cout<<" ";
}